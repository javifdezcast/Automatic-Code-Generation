//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizVentanasHasVentanaPrincipal
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("ab8ad49e-abed-4d9f-9f15-4f65db51e7e8")]
	public partial class TapizVentanasHasVentanaPrincipal : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizVentanasHasVentanaPrincipal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xab8ad49e, 0xabed, 0x4d9f, 0x9f, 0x15, 0x4f, 0x65, 0xdb, 0x51, 0xe7, 0xe8);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizVentanasHasVentanaPrincipal link in the same Partition as the given TapizVentanas
		/// </summary>
		/// <param name="source">TapizVentanas to use as the source of the relationship.</param>
		/// <param name="target">VentanaPrincipal to use as the target of the relationship.</param>
		public TapizVentanasHasVentanaPrincipal(TapizVentanas source, VentanaPrincipal target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId, source), new DslModeling::RoleAssignment(TapizVentanasHasVentanaPrincipal.VentanaPrincipalDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasVentanaPrincipal(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasVentanaPrincipal(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasVentanaPrincipal(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasVentanaPrincipal(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region TapizVentanas domain role code
		
		/// <summary>
		/// TapizVentanas domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizVentanasDomainRoleId = new global::System.Guid(0x86c57a08, 0x6027, 0x4158, 0xae, 0x5f, 0x8a, 0x4a, 0x75, 0xf2, 0x75, 0x93);
		
		/// <summary>
		/// DomainRole TapizVentanas
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanas
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal/TapizVentanas.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal/TapizVentanas.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "VentanaPrincipal", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal/TapizVentanas.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("86c57a08-6027-4158-ae5f-8a4a75f27593")]
		public virtual TapizVentanas TapizVentanas
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (TapizVentanas)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizVentanasDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizVentanasDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access TapizVentanas of a VentanaPrincipal
		/// <summary>
		/// Gets TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static TapizVentanas GetTapizVentanas(VentanaPrincipal element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, VentanaPrincipalDomainRoleId) as TapizVentanas;
		}
		
		/// <summary>
		/// Sets TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapizVentanas(VentanaPrincipal element, TapizVentanas newTapizVentanas)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, VentanaPrincipalDomainRoleId, newTapizVentanas);
		}
		#endregion
		#region VentanaPrincipal domain role code
		
		/// <summary>
		/// VentanaPrincipal domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaPrincipalDomainRoleId = new global::System.Guid(0x4e8608e9, 0x2298, 0x4b8f, 0x8d, 0xa2, 0xe3, 0x10, 0x9d, 0xeb, 0x8f, 0x47);
		
		/// <summary>
		/// DomainRole VentanaPrincipal
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.VentanaPrincipal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal/VentanaPrincipal.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal/VentanaPrincipal.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "TapizVentanas", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal/VentanaPrincipal.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("4e8608e9-2298-4b8f-8da2-e3109deb8f47")]
		public virtual VentanaPrincipal VentanaPrincipal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (VentanaPrincipal)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaPrincipalDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaPrincipalDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VentanaPrincipal of a TapizVentanas
		/// <summary>
		/// Gets VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static VentanaPrincipal GetVentanaPrincipal(TapizVentanas element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, TapizVentanasDomainRoleId) as VentanaPrincipal;
		}
		
		/// <summary>
		/// Sets VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentanaPrincipal(TapizVentanas element, VentanaPrincipal newVentanaPrincipal)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, TapizVentanasDomainRoleId, newVentanaPrincipal);
		}
		#endregion
		#region TapizVentanas link accessor
		/// <summary>
		/// Get the TapizVentanasHasVentanaPrincipal link to a TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal GetLinkToVentanaPrincipal (global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas tapizVentanasInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal>(tapizVentanasInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of TapizVentanas not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region VentanaPrincipal link accessor
		/// <summary>
		/// Get the TapizVentanasHasVentanaPrincipal link to a VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal GetLinkToTapizVentanas (global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal ventanaPrincipalInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal>(ventanaPrincipalInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.VentanaPrincipalDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of VentanaPrincipal not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizVentanasHasVentanaPrincipal instance accessors
		
		/// <summary>
		/// Get any TapizVentanasHasVentanaPrincipal links between a given TapizVentanas and a VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal link in links )
			{
				if ( target.Equals(link.VentanaPrincipal) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizVentanasHasVentanaPrincipal link between a given TapizVentanasand a VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal link in links )
			{
				if ( target.Equals(link.VentanaPrincipal) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizVentanasHasVentanaSecundaria
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("0854d00b-80e2-4653-9f92-f10ca7c5e974")]
	public partial class TapizVentanasHasVentanaSecundaria : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizVentanasHasVentanaSecundaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0854d00b, 0x80e2, 0x4653, 0x9f, 0x92, 0xf1, 0x0c, 0xa7, 0xc5, 0xe9, 0x74);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizVentanasHasVentanaSecundaria link in the same Partition as the given TapizVentanas
		/// </summary>
		/// <param name="source">TapizVentanas to use as the source of the relationship.</param>
		/// <param name="target">VentanaSecundaria to use as the target of the relationship.</param>
		public TapizVentanasHasVentanaSecundaria(TapizVentanas source, VentanaSecundaria target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId, source), new DslModeling::RoleAssignment(TapizVentanasHasVentanaSecundaria.VentanaSecundariaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasVentanaSecundaria(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasVentanaSecundaria(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasVentanaSecundaria(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasVentanaSecundaria(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region TapizVentanas domain role code
		
		/// <summary>
		/// TapizVentanas domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizVentanasDomainRoleId = new global::System.Guid(0x840ada49, 0x4f13, 0x4b5a, 0xbc, 0xab, 0x9b, 0xab, 0x4c, 0x2e, 0xcc, 0xa3);
		
		/// <summary>
		/// DomainRole TapizVentanas
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanas
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria/TapizVentanas.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria/TapizVentanas.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "VentanaSecundaria", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria/TapizVentanas.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("840ada49-4f13-4b5a-bcab-9bab4c2ecca3")]
		public virtual TapizVentanas TapizVentanas
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (TapizVentanas)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizVentanasDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizVentanasDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access TapizVentanas1 of a VentanaSecundaria
		/// <summary>
		/// Gets TapizVentanas1.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static TapizVentanas GetTapizVentanas1(VentanaSecundaria element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, VentanaSecundariaDomainRoleId) as TapizVentanas;
		}
		
		/// <summary>
		/// Sets TapizVentanas1.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapizVentanas1(VentanaSecundaria element, TapizVentanas newTapizVentanas)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, VentanaSecundariaDomainRoleId, newTapizVentanas);
		}
		#endregion
		#region VentanaSecundaria domain role code
		
		/// <summary>
		/// VentanaSecundaria domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaSecundariaDomainRoleId = new global::System.Guid(0xbfc604d2, 0x02fc, 0x4fc6, 0x88, 0xaf, 0xdd, 0x5d, 0x71, 0x90, 0xad, 0xbe);
		
		/// <summary>
		/// DomainRole VentanaSecundaria
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.VentanaSecundaria
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria/VentanaSecundaria.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria/VentanaSecundaria.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "TapizVentanas1", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria/VentanaSecundaria.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("bfc604d2-02fc-4fc6-88af-dd5d7190adbe")]
		public virtual VentanaSecundaria VentanaSecundaria
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (VentanaSecundaria)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaSecundariaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaSecundariaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VentanaSecundaria of a TapizVentanas
		/// <summary>
		/// Gets a list of VentanaSecundaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<VentanaSecundaria> GetVentanaSecundaria(TapizVentanas element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<VentanaSecundaria>, VentanaSecundaria>(element, TapizVentanasDomainRoleId);
		}
		#endregion
		#region TapizVentanas link accessor
		/// <summary>
		/// Get the list of TapizVentanasHasVentanaSecundaria links to a TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria> GetLinksToVentanaSecundaria ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas tapizVentanasInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria>(tapizVentanasInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId);
		}
		#endregion
		#region VentanaSecundaria link accessor
		/// <summary>
		/// Get the TapizVentanasHasVentanaSecundaria link to a VentanaSecundaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria GetLinkToTapizVentanas1 (global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria ventanaSecundariaInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria>(ventanaSecundariaInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.VentanaSecundariaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of VentanaSecundaria not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizVentanasHasVentanaSecundaria instance accessors
		
		/// <summary>
		/// Get any TapizVentanasHasVentanaSecundaria links between a given TapizVentanas and a VentanaSecundaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria link in links )
			{
				if ( target.Equals(link.VentanaSecundaria) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizVentanasHasVentanaSecundaria link between a given TapizVentanasand a VentanaSecundaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria link in links )
			{
				if ( target.Equals(link.VentanaSecundaria) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship VentanaHasBotonPertenece
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("8b516384-08c2-435a-a284-351344b2fadc")]
	public partial class VentanaHasBotonPertenece : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// VentanaHasBotonPertenece domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8b516384, 0x08c2, 0x435a, 0xa2, 0x84, 0x35, 0x13, 0x44, 0xb2, 0xfa, 0xdc);
	
				
		/// <summary>
		/// Constructor
		/// Creates a VentanaHasBotonPertenece link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">Boton to use as the target of the relationship.</param>
		public VentanaHasBotonPertenece(Ventana source, Boton target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(VentanaHasBotonPertenece.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(VentanaHasBotonPertenece.BotonDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasBotonPertenece(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasBotonPertenece(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasBotonPertenece(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasBotonPertenece(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xa3991f86, 0x1445, 0x4543, 0x97, 0xae, 0xf4, 0x9a, 0x28, 0x2f, 0xd0, 0xc9);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece/Ventana.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece/Ventana.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "BotonPertenece", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("a3991f86-1445-4543-97ae-f49a282fd0c9")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VentanaTieneBoton of a Boton
		/// <summary>
		/// Gets VentanaTieneBoton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentanaTieneBoton(Boton element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, BotonDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets VentanaTieneBoton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentanaTieneBoton(Boton element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, BotonDomainRoleId, newVentana);
		}
		#endregion
		#region Boton domain role code
		
		/// <summary>
		/// Boton domain role Id.
		/// </summary>
		public static readonly global::System.Guid BotonDomainRoleId = new global::System.Guid(0xef27e575, 0xf9b2, 0x4134, 0x84, 0xbe, 0x4c, 0x92, 0x07, 0x0f, 0xe3, 0x12);
		
		/// <summary>
		/// DomainRole Boton
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.Boton
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece/Boton.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece/Boton.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "VentanaTieneBoton", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece/Boton.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("ef27e575-f9b2-4134-84be-4c92070fe312")]
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Boton)DslModeling::DomainRoleInfo.GetRolePlayer(this, BotonDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, BotonDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access BotonPertenece of a Ventana
		/// <summary>
		/// Gets a list of BotonPertenece.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Boton> GetBotonPertenece(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of VentanaHasBotonPertenece links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece> GetLinksToBotonPertenece ( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece>(ventanaInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.VentanaDomainRoleId);
		}
		#endregion
		#region Boton link accessor
		/// <summary>
		/// Get the VentanaHasBotonPertenece link to a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece GetLinkToVentanaTieneBoton (global::UPM_IPS.IGGORCJCFProyectoIPS.Boton botonInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece>(botonInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.BotonDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Boton not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region VentanaHasBotonPertenece instance accessors
		
		/// <summary>
		/// Get any VentanaHasBotonPertenece links between a given Ventana and a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana source, global::UPM_IPS.IGGORCJCFProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one VentanaHasBotonPertenece link between a given Ventanaand a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana source, global::UPM_IPS.IGGORCJCFProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship VentanaHasMenuPertenece
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("8bd9cc38-eebf-414d-8672-4401a91eefbc")]
	public partial class VentanaHasMenuPertenece : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// VentanaHasMenuPertenece domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8bd9cc38, 0xeebf, 0x414d, 0x86, 0x72, 0x44, 0x01, 0xa9, 0x1e, 0xef, 0xbc);
	
				
		/// <summary>
		/// Constructor
		/// Creates a VentanaHasMenuPertenece link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">Menu to use as the target of the relationship.</param>
		public VentanaHasMenuPertenece(Ventana source, Menu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(VentanaHasMenuPertenece.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(VentanaHasMenuPertenece.MenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasMenuPertenece(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasMenuPertenece(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasMenuPertenece(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasMenuPertenece(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0x52bc4a1f, 0xe91b, 0x42c0, 0xb8, 0x6d, 0xbd, 0x32, 0x00, 0x0a, 0x79, 0xbe);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece/Ventana.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece/Ventana.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "MenuPertenece", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("52bc4a1f-e91b-42c0-b86d-bd32000a79be")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VentanaTieneMenu of a Menu
		/// <summary>
		/// Gets VentanaTieneMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentanaTieneMenu(Menu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, MenuDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets VentanaTieneMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentanaTieneMenu(Menu element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, MenuDomainRoleId, newVentana);
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0x3e3f2bf9, 0xeaf7, 0x426a, 0x80, 0x9a, 0x00, 0x9c, 0x1a, 0xd3, 0x4a, 0xc7);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece/Menu.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece/Menu.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "VentanaTieneMenu", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece/Menu.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("3e3f2bf9-eaf7-426a-809a-009c1ad34ac7")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access MenuPertenece of a Ventana
		/// <summary>
		/// Gets a list of MenuPertenece.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Menu> GetMenuPertenece(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of VentanaHasMenuPertenece links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece> GetLinksToMenuPertenece ( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece>(ventanaInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.VentanaDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the VentanaHasMenuPertenece link to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece GetLinkToVentanaTieneMenu (global::UPM_IPS.IGGORCJCFProyectoIPS.Menu menuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece>(menuInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.MenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Menu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region VentanaHasMenuPertenece instance accessors
		
		/// <summary>
		/// Get any VentanaHasMenuPertenece links between a given Ventana and a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana source, global::UPM_IPS.IGGORCJCFProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one VentanaHasMenuPertenece link between a given Ventanaand a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana source, global::UPM_IPS.IGGORCJCFProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship MenuHasItemPerteneceMenu
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("f102e844-22ad-4f3e-ade3-e396ac7c69c8")]
	public partial class MenuHasItemPerteneceMenu : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// MenuHasItemPerteneceMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf102e844, 0x22ad, 0x4f3e, 0xad, 0xe3, 0xe3, 0x96, 0xac, 0x7c, 0x69, 0xc8);
	
				
		/// <summary>
		/// Constructor
		/// Creates a MenuHasItemPerteneceMenu link in the same Partition as the given Menu
		/// </summary>
		/// <param name="source">Menu to use as the source of the relationship.</param>
		/// <param name="target">ItemMenu to use as the target of the relationship.</param>
		public MenuHasItemPerteneceMenu(Menu source, ItemMenu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(MenuHasItemPerteneceMenu.MenuDomainRoleId, source), new DslModeling::RoleAssignment(MenuHasItemPerteneceMenu.ItemMenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public MenuHasItemPerteneceMenu(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public MenuHasItemPerteneceMenu(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public MenuHasItemPerteneceMenu(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public MenuHasItemPerteneceMenu(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0x9c5bec6a, 0x94e4, 0x4668, 0xab, 0xd1, 0xf8, 0x51, 0xc0, 0xce, 0x9f, 0x03);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu/Menu.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu/Menu.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ItemPerteneceMenu", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu/Menu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("9c5bec6a-94e4-4668-abd1-f851c0ce9f03")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access MenuTieneItem of a ItemMenu
		/// <summary>
		/// Gets MenuTieneItem.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Menu GetMenuTieneItem(ItemMenu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ItemMenuDomainRoleId) as Menu;
		}
		
		/// <summary>
		/// Sets MenuTieneItem.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetMenuTieneItem(ItemMenu element, Menu newMenu)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ItemMenuDomainRoleId, newMenu);
		}
		#endregion
		#region ItemMenu domain role code
		
		/// <summary>
		/// ItemMenu domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemMenuDomainRoleId = new global::System.Guid(0x1ecd0fae, 0x0761, 0x4772, 0xa2, 0x4c, 0x84, 0xe0, 0x44, 0x36, 0x8e, 0x93);
		
		/// <summary>
		/// DomainRole ItemMenu
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.ItemMenu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu/ItemMenu.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu/ItemMenu.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "MenuTieneItem", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu/ItemMenu.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("1ecd0fae-0761-4772-a24c-84e044368e93")]
		public virtual ItemMenu ItemMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ItemMenu)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemMenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemMenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ItemPerteneceMenu of a Menu
		/// <summary>
		/// Gets a list of ItemPerteneceMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ItemMenu> GetItemPerteneceMenu(Menu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(element, MenuDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the list of MenuHasItemPerteneceMenu links to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu> GetLinksToItemPerteneceMenu ( global::UPM_IPS.IGGORCJCFProyectoIPS.Menu menuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu>(menuInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.MenuDomainRoleId);
		}
		#endregion
		#region ItemMenu link accessor
		/// <summary>
		/// Get the MenuHasItemPerteneceMenu link to a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu GetLinkToMenuTieneItem (global::UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu itemMenuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu>(itemMenuInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.ItemMenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ItemMenu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region MenuHasItemPerteneceMenu instance accessors
		
		/// <summary>
		/// Get any MenuHasItemPerteneceMenu links between a given Menu and a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Menu source, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.MenuDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu link in links )
			{
				if ( target.Equals(link.ItemMenu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one MenuHasItemPerteneceMenu link between a given Menuand a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Menu source, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.MenuDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu link in links )
			{
				if ( target.Equals(link.ItemMenu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ItemReferencesVentana
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("0a05be97-bd04-4f34-9a1b-fec4a23a15e9")]
	public partial class ItemReferencesVentana : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ItemReferencesVentana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0a05be97, 0xbd04, 0x4f34, 0x9a, 0x1b, 0xfe, 0xc4, 0xa2, 0x3a, 0x15, 0xe9);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ItemReferencesVentana link in the same Partition as the given Item
		/// </summary>
		/// <param name="source">Item to use as the source of the relationship.</param>
		/// <param name="target">Ventana to use as the target of the relationship.</param>
		public ItemReferencesVentana(Item source, Ventana target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ItemReferencesVentana.ItemDomainRoleId, source), new DslModeling::RoleAssignment(ItemReferencesVentana.VentanaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemReferencesVentana(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemReferencesVentana(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemReferencesVentana(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemReferencesVentana(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Item domain role code
		
		/// <summary>
		/// Item domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemDomainRoleId = new global::System.Guid(0xc6b1c548, 0x39db, 0x468d, 0xb2, 0x19, 0xeb, 0xbb, 0x98, 0x65, 0x69, 0xb5);
		
		/// <summary>
		/// DomainRole Item
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.Item
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana/Item.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana/Item.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana/Item.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("c6b1c548-39db-468d-b219-ebbb986569b5")]
		public virtual Item Item
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Item)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Item of a Ventana
		/// <summary>
		/// Gets a list of Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Item> GetItem(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0x08b26e41, 0xb86c, 0x4d41, 0x8a, 0xd9, 0xa8, 0xc6, 0x8d, 0x4c, 0x06, 0x36);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana/Ventana.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana/Ventana.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Item", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("08b26e41-b86c-4d41-8ad9-a8c68d4c0636")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a Item
		/// <summary>
		/// Gets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentana(Item element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ItemDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentana(Item element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ItemDomainRoleId, newVentana);
		}
		#endregion
		#region Item link accessor
		/// <summary>
		/// Get the ItemReferencesVentana link to a Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana GetLinkToVentana (global::UPM_IPS.IGGORCJCFProyectoIPS.Item itemInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana>(itemInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.ItemDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Item not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of ItemReferencesVentana links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana> GetLinksToItem ( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana>(ventanaInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.VentanaDomainRoleId);
		}
		#endregion
		#region ItemReferencesVentana instance accessors
		
		/// <summary>
		/// Get any ItemReferencesVentana links between a given Item and a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Item source, global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.ItemDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ItemReferencesVentana link between a given Itemand a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Item source, global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.ItemDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizVentanasHasEstadoFinal
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("1daa517f-8aa7-45a9-a7e5-c357b09e6ed2")]
	public partial class TapizVentanasHasEstadoFinal : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizVentanasHasEstadoFinal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1daa517f, 0x8aa7, 0x45a9, 0xa7, 0xe5, 0xc3, 0x57, 0xb0, 0x9e, 0x6e, 0xd2);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizVentanasHasEstadoFinal link in the same Partition as the given TapizVentanas
		/// </summary>
		/// <param name="source">TapizVentanas to use as the source of the relationship.</param>
		/// <param name="target">EstadoFinal to use as the target of the relationship.</param>
		public TapizVentanasHasEstadoFinal(TapizVentanas source, EstadoFinal target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizVentanasHasEstadoFinal.TapizVentanasDomainRoleId, source), new DslModeling::RoleAssignment(TapizVentanasHasEstadoFinal.EstadoFinalDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasEstadoFinal(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasEstadoFinal(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasEstadoFinal(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasEstadoFinal(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region TapizVentanas domain role code
		
		/// <summary>
		/// TapizVentanas domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizVentanasDomainRoleId = new global::System.Guid(0xcdb4255c, 0xe1de, 0x417f, 0x93, 0x99, 0x4d, 0x6b, 0x94, 0x9f, 0x45, 0xfc);
		
		/// <summary>
		/// DomainRole TapizVentanas
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.TapizVentanas
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal/TapizVentanas.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal/TapizVentanas.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstadoFinal", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal/TapizVentanas.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("cdb4255c-e1de-417f-9399-4d6b949f45fc")]
		public virtual TapizVentanas TapizVentanas
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (TapizVentanas)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizVentanasDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizVentanasDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access TapizEstado of a EstadoFinal
		/// <summary>
		/// Gets TapizEstado.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static TapizVentanas GetTapizEstado(EstadoFinal element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, EstadoFinalDomainRoleId) as TapizVentanas;
		}
		
		/// <summary>
		/// Sets TapizEstado.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapizEstado(EstadoFinal element, TapizVentanas newTapizVentanas)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, EstadoFinalDomainRoleId, newTapizVentanas);
		}
		#endregion
		#region EstadoFinal domain role code
		
		/// <summary>
		/// EstadoFinal domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstadoFinalDomainRoleId = new global::System.Guid(0xeea41fbe, 0xb2ba, 0x4187, 0xbf, 0x55, 0x76, 0xac, 0x96, 0x48, 0x42, 0x9c);
		
		/// <summary>
		/// DomainRole EstadoFinal
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.EstadoFinal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal/EstadoFinal.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal/EstadoFinal.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "TapizEstado", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal/EstadoFinal.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("eea41fbe-b2ba-4187-bf55-76ac9648429c")]
		public virtual EstadoFinal EstadoFinal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstadoFinal)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstadoFinalDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstadoFinalDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstadoFinal of a TapizVentanas
		/// <summary>
		/// Gets EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static EstadoFinal GetEstadoFinal(TapizVentanas element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, TapizVentanasDomainRoleId) as EstadoFinal;
		}
		
		/// <summary>
		/// Sets EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEstadoFinal(TapizVentanas element, EstadoFinal newEstadoFinal)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, TapizVentanasDomainRoleId, newEstadoFinal);
		}
		#endregion
		#region TapizVentanas link accessor
		/// <summary>
		/// Get the TapizVentanasHasEstadoFinal link to a TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal GetLinkToEstadoFinal (global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas tapizVentanasInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal>(tapizVentanasInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.TapizVentanasDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of TapizVentanas not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region EstadoFinal link accessor
		/// <summary>
		/// Get the TapizVentanasHasEstadoFinal link to a EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal GetLinkToTapizEstado (global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal estadoFinalInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal>(estadoFinalInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.EstadoFinalDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of EstadoFinal not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizVentanasHasEstadoFinal instance accessors
		
		/// <summary>
		/// Get any TapizVentanasHasEstadoFinal links between a given TapizVentanas and a EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas source, global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal link in links )
			{
				if ( target.Equals(link.EstadoFinal) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizVentanasHasEstadoFinal link between a given TapizVentanasand a EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas source, global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal link in links )
			{
				if ( target.Equals(link.EstadoFinal) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ItemReferencesEstadoFinal
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("ebb2e4da-42b4-4736-90a0-aedf58907b45")]
	public partial class ItemReferencesEstadoFinal : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ItemReferencesEstadoFinal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xebb2e4da, 0x42b4, 0x4736, 0x90, 0xa0, 0xae, 0xdf, 0x58, 0x90, 0x7b, 0x45);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ItemReferencesEstadoFinal link in the same Partition as the given Item
		/// </summary>
		/// <param name="source">Item to use as the source of the relationship.</param>
		/// <param name="target">EstadoFinal to use as the target of the relationship.</param>
		public ItemReferencesEstadoFinal(Item source, EstadoFinal target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ItemReferencesEstadoFinal.ItemDomainRoleId, source), new DslModeling::RoleAssignment(ItemReferencesEstadoFinal.EstadoFinalDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemReferencesEstadoFinal(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemReferencesEstadoFinal(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemReferencesEstadoFinal(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemReferencesEstadoFinal(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Item domain role code
		
		/// <summary>
		/// Item domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemDomainRoleId = new global::System.Guid(0x33405b82, 0x639d, 0x4217, 0x8c, 0x5e, 0x77, 0x9d, 0x7b, 0xd7, 0xbe, 0xa1);
		
		/// <summary>
		/// DomainRole Item
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.Item
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal/Item.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal/Item.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstadoFinal", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal/Item.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("33405b82-639d-4217-8c5e-779d7bd7bea1")]
		public virtual Item Item
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Item)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Item of a EstadoFinal
		/// <summary>
		/// Gets a list of Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Item> GetItem(EstadoFinal element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(element, EstadoFinalDomainRoleId);
		}
		#endregion
		#region EstadoFinal domain role code
		
		/// <summary>
		/// EstadoFinal domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstadoFinalDomainRoleId = new global::System.Guid(0xa0ed0111, 0xfb7d, 0x4a34, 0x84, 0x0c, 0x56, 0x42, 0x09, 0xea, 0x4a, 0xf3);
		
		/// <summary>
		/// DomainRole EstadoFinal
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.EstadoFinal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal/EstadoFinal.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal/EstadoFinal.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Item", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal/EstadoFinal.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("a0ed0111-fb7d-4a34-840c-564209ea4af3")]
		public virtual EstadoFinal EstadoFinal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstadoFinal)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstadoFinalDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstadoFinalDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstadoFinal of a Item
		/// <summary>
		/// Gets EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static EstadoFinal GetEstadoFinal(Item element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ItemDomainRoleId) as EstadoFinal;
		}
		
		/// <summary>
		/// Sets EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEstadoFinal(Item element, EstadoFinal newEstadoFinal)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ItemDomainRoleId, newEstadoFinal);
		}
		#endregion
		#region Item link accessor
		/// <summary>
		/// Get the ItemReferencesEstadoFinal link to a Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal GetLinkToEstadoFinal (global::UPM_IPS.IGGORCJCFProyectoIPS.Item itemInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal>(itemInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.ItemDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Item not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region EstadoFinal link accessor
		/// <summary>
		/// Get the list of ItemReferencesEstadoFinal links to a EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal> GetLinksToItem ( global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal estadoFinalInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal>(estadoFinalInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.EstadoFinalDomainRoleId);
		}
		#endregion
		#region ItemReferencesEstadoFinal instance accessors
		
		/// <summary>
		/// Get any ItemReferencesEstadoFinal links between a given Item and a EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Item source, global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.ItemDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal link in links )
			{
				if ( target.Equals(link.EstadoFinal) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ItemReferencesEstadoFinal link between a given Itemand a EstadoFinal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Item source, global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.ItemDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal link in links )
			{
				if ( target.Equals(link.EstadoFinal) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ItemReferencesClase
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("140258e2-923c-43ad-bc9d-a0ba50edc7e5")]
	public partial class ItemReferencesClase : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ItemReferencesClase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x140258e2, 0x923c, 0x43ad, 0xbc, 0x9d, 0xa0, 0xba, 0x50, 0xed, 0xc7, 0xe5);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ItemReferencesClase link in the same Partition as the given Item
		/// </summary>
		/// <param name="source">Item to use as the source of the relationship.</param>
		/// <param name="target">Clase to use as the target of the relationship.</param>
		public ItemReferencesClase(Item source, Clase target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ItemReferencesClase.ItemDomainRoleId, source), new DslModeling::RoleAssignment(ItemReferencesClase.ClaseDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemReferencesClase(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemReferencesClase(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemReferencesClase(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemReferencesClase(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Item domain role code
		
		/// <summary>
		/// Item domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemDomainRoleId = new global::System.Guid(0xff625665, 0xe947, 0x411c, 0x90, 0x12, 0x6c, 0x82, 0xc2, 0x53, 0x26, 0xc1);
		
		/// <summary>
		/// DomainRole Item
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.Item
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase/Item.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase/Item.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Clase", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase/Item.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("ff625665-e947-411c-9012-6c82c25326c1")]
		public virtual Item Item
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Item)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Item of a Clase
		/// <summary>
		/// Gets a list of Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Item> GetItem(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x8347c3a5, 0x54e7, 0x4b13, 0xbb, 0xd5, 0xd3, 0xdf, 0xa7, 0xd3, 0x7e, 0xf3);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase/Clase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase/Clase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Item", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("8347c3a5-54e7-4b13-bbd5-d3dfa7d37ef3")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a Item
		/// <summary>
		/// Gets a list of Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClase(Item element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, ItemDomainRoleId);
		}
		#endregion
		#region Item link accessor
		/// <summary>
		/// Get the list of ItemReferencesClase links to a Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase> GetLinksToClase ( global::UPM_IPS.IGGORCJCFProyectoIPS.Item itemInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase>(itemInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.ItemDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ItemReferencesClase links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase> GetLinksToItem ( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase>(claseInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.ClaseDomainRoleId);
		}
		#endregion
		#region ItemReferencesClase instance accessors
		
		/// <summary>
		/// Get any ItemReferencesClase links between a given Item and a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Item source, global::UPM_IPS.IGGORCJCFProyectoIPS.Clase target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.ItemDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ItemReferencesClase link between a given Itemand a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Item source, global::UPM_IPS.IGGORCJCFProyectoIPS.Clase target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.ItemDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizVentanasHasClase
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("2ed07bc1-ff11-4a19-9d9d-34c2b80c1851")]
	public partial class TapizVentanasHasClase : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizVentanasHasClase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2ed07bc1, 0xff11, 0x4a19, 0x9d, 0x9d, 0x34, 0xc2, 0xb8, 0x0c, 0x18, 0x51);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizVentanasHasClase link in the same Partition as the given TapizVentanas
		/// </summary>
		/// <param name="source">TapizVentanas to use as the source of the relationship.</param>
		/// <param name="target">Clase to use as the target of the relationship.</param>
		public TapizVentanasHasClase(TapizVentanas source, Clase target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizVentanasHasClase.TapizVentanasDomainRoleId, source), new DslModeling::RoleAssignment(TapizVentanasHasClase.ClaseDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasClase(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasClase(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasClase(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasClase(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region TapizVentanas domain role code
		
		/// <summary>
		/// TapizVentanas domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizVentanasDomainRoleId = new global::System.Guid(0xd3500e45, 0x931c, 0x444a, 0x8b, 0x9a, 0x22, 0xdd, 0x40, 0x35, 0x6b, 0x2b);
		
		/// <summary>
		/// DomainRole TapizVentanas
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.TapizVentanas
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase/TapizVentanas.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase/TapizVentanas.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Clase", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase/TapizVentanas.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("d3500e45-931c-444a-8b9a-22dd40356b2b")]
		public virtual TapizVentanas TapizVentanas
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (TapizVentanas)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizVentanasDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizVentanasDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access TapizVentanas2 of a Clase
		/// <summary>
		/// Gets TapizVentanas2.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static TapizVentanas GetTapizVentanas2(Clase element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ClaseDomainRoleId) as TapizVentanas;
		}
		
		/// <summary>
		/// Sets TapizVentanas2.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapizVentanas2(Clase element, TapizVentanas newTapizVentanas)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ClaseDomainRoleId, newTapizVentanas);
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0xd1e4cb8b, 0xe762, 0x44ee, 0x87, 0xc5, 0xca, 0x3f, 0xf9, 0x09, 0x18, 0xb7);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase/Clase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase/Clase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "TapizVentanas2", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase/Clase.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("d1e4cb8b-e762-44ee-87c5-ca3ff90918b7")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a TapizVentanas
		/// <summary>
		/// Gets a list of Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClase(TapizVentanas element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, TapizVentanasDomainRoleId);
		}
		#endregion
		#region TapizVentanas link accessor
		/// <summary>
		/// Get the list of TapizVentanasHasClase links to a TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase> GetLinksToClase ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas tapizVentanasInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase>(tapizVentanasInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.TapizVentanasDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the TapizVentanasHasClase link to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase GetLinkToTapizVentanas2 (global::UPM_IPS.IGGORCJCFProyectoIPS.Clase claseInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase>(claseInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.ClaseDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Clase not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizVentanasHasClase instance accessors
		
		/// <summary>
		/// Get any TapizVentanasHasClase links between a given TapizVentanas and a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas source, global::UPM_IPS.IGGORCJCFProyectoIPS.Clase target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizVentanasHasClase link between a given TapizVentanasand a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas source, global::UPM_IPS.IGGORCJCFProyectoIPS.Clase target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ClaseReferencesVentana4
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("7fb204c9-9360-4896-afde-c01e9f32f8db")]
	public partial class ClaseReferencesVentana4 : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseReferencesVentana4 domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7fb204c9, 0x9360, 0x4896, 0xaf, 0xde, 0xc0, 0x1e, 0x9f, 0x32, 0xf8, 0xdb);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseReferencesVentana4 link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">Ventana to use as the target of the relationship.</param>
		public ClaseReferencesVentana4(Clase source, Ventana target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseReferencesVentana4.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseReferencesVentana4.VentanaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesVentana4(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesVentana4(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesVentana4(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesVentana4(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x38e8fd7e, 0x8219, 0x4117, 0xb0, 0x7c, 0x66, 0xa7, 0x23, 0xf3, 0xb4, 0x56);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4/Clase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4/Clase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Ventana4", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("38e8fd7e-8219-4117-b07c-66a723f3b456")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase1 of a Ventana
		/// <summary>
		/// Gets a list of Clase1.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClase1(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0x0611ad3f, 0x0dfb, 0x477a, 0x83, 0x50, 0x40, 0x12, 0x3f, 0x59, 0x52, 0x64);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4/Ventana.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4/Ventana.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase1", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("0611ad3f-0dfb-477a-8350-40123f595264")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana4 of a Clase
		/// <summary>
		/// Gets a list of Ventana4.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Ventana> GetVentana4(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ClaseReferencesVentana4 links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4> GetLinksToVentana4 ( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4>(claseInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.ClaseDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of ClaseReferencesVentana4 links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4> GetLinksToClase1 ( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4>(ventanaInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.VentanaDomainRoleId);
		}
		#endregion
		#region ClaseReferencesVentana4 instance accessors
		
		/// <summary>
		/// Get any ClaseReferencesVentana4 links between a given Clase and a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4 link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseReferencesVentana4 link between a given Claseand a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4 GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4 link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ClaseReferencesItem4
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("46430ebc-0ecc-498f-81b3-8b563e25e639")]
	public partial class ClaseReferencesItem4 : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseReferencesItem4 domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x46430ebc, 0x0ecc, 0x498f, 0x81, 0xb3, 0x8b, 0x56, 0x3e, 0x25, 0xe6, 0x39);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseReferencesItem4 link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">Item to use as the target of the relationship.</param>
		public ClaseReferencesItem4(Clase source, Item target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseReferencesItem4.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseReferencesItem4.ItemDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesItem4(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesItem4(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesItem4(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesItem4(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x3f4a1615, 0x444e, 0x4af0, 0x8a, 0xe3, 0x30, 0x7b, 0x84, 0x5e, 0x24, 0x4b);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4/Clase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4/Clase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Item4", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("3f4a1615-444e-4af0-8ae3-307b845e244b")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase2 of a Item
		/// <summary>
		/// Gets a list of Clase2.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClase2(Item element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, ItemDomainRoleId);
		}
		#endregion
		#region Item domain role code
		
		/// <summary>
		/// Item domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemDomainRoleId = new global::System.Guid(0xcf1c6100, 0x5d9c, 0x4d1f, 0xa9, 0x80, 0x80, 0x17, 0x39, 0xa0, 0x8f, 0xed);
		
		/// <summary>
		/// DomainRole Item
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.Item
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4/Item.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4/Item.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase2", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4/Item.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("cf1c6100-5d9c-4d1f-a980-801739a08fed")]
		public virtual Item Item
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Item)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Item4 of a Clase
		/// <summary>
		/// Gets a list of Item4.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Item> GetItem4(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ClaseReferencesItem4 links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4> GetLinksToItem4 ( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4>(claseInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.ClaseDomainRoleId);
		}
		#endregion
		#region Item link accessor
		/// <summary>
		/// Get the list of ClaseReferencesItem4 links to a Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4> GetLinksToClase2 ( global::UPM_IPS.IGGORCJCFProyectoIPS.Item itemInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4>(itemInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.ItemDomainRoleId);
		}
		#endregion
		#region ClaseReferencesItem4 instance accessors
		
		/// <summary>
		/// Get any ClaseReferencesItem4 links between a given Clase and a Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.Item target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4 link in links )
			{
				if ( target.Equals(link.Item) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseReferencesItem4 link between a given Claseand a Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4 GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.Item target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4 link in links )
			{
				if ( target.Equals(link.Item) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ClaseReferencesMenu4
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("a5a1aa08-b1ee-4250-8351-1eb6b4ff72a2")]
	public partial class ClaseReferencesMenu4 : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseReferencesMenu4 domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa5a1aa08, 0xb1ee, 0x4250, 0x83, 0x51, 0x1e, 0xb6, 0xb4, 0xff, 0x72, 0xa2);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseReferencesMenu4 link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">Menu to use as the target of the relationship.</param>
		public ClaseReferencesMenu4(Clase source, Menu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseReferencesMenu4.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseReferencesMenu4.MenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesMenu4(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesMenu4(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesMenu4(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesMenu4(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x81311a83, 0x783b, 0x4390, 0xa4, 0xa5, 0xf9, 0x06, 0x19, 0xd4, 0x73, 0x51);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4/Clase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4/Clase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Menu4", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("81311a83-783b-4390-a4a5-f90619d47351")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase3 of a Menu
		/// <summary>
		/// Gets a list of Clase3.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClase3(Menu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, MenuDomainRoleId);
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0x8c5deabe, 0x4fd2, 0x4d50, 0xa3, 0x09, 0x62, 0x11, 0xe9, 0x05, 0x18, 0xa3);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4/Menu.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4/Menu.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase3", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4/Menu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("8c5deabe-4fd2-4d50-a309-6211e90518a3")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Menu4 of a Clase
		/// <summary>
		/// Gets a list of Menu4.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Menu> GetMenu4(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ClaseReferencesMenu4 links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4> GetLinksToMenu4 ( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4>(claseInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.ClaseDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the list of ClaseReferencesMenu4 links to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4> GetLinksToClase3 ( global::UPM_IPS.IGGORCJCFProyectoIPS.Menu menuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4>(menuInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.MenuDomainRoleId);
		}
		#endregion
		#region ClaseReferencesMenu4 instance accessors
		
		/// <summary>
		/// Get any ClaseReferencesMenu4 links between a given Clase and a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4 link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseReferencesMenu4 link between a given Claseand a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4 GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4 link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship VentanaHasEntradaDeDatos
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("c3332208-d8a1-4732-8902-e169c891470b")]
	public partial class VentanaHasEntradaDeDatos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// VentanaHasEntradaDeDatos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc3332208, 0xd8a1, 0x4732, 0x89, 0x02, 0xe1, 0x69, 0xc8, 0x91, 0x47, 0x0b);
	
				
		/// <summary>
		/// Constructor
		/// Creates a VentanaHasEntradaDeDatos link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">EntradaDeDatos to use as the target of the relationship.</param>
		public VentanaHasEntradaDeDatos(Ventana source, EntradaDeDatos target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(VentanaHasEntradaDeDatos.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(VentanaHasEntradaDeDatos.EntradaDeDatosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasEntradaDeDatos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasEntradaDeDatos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasEntradaDeDatos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasEntradaDeDatos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xe641bc80, 0x78ea, 0x466e, 0xa0, 0x29, 0xcf, 0x9b, 0x2a, 0x0b, 0x28, 0x2e);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos/Ventana.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos/Ventana.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EntradaDeDatos", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("e641bc80-78ea-466e-a029-cf9b2a0b282e")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VentanaTieneEntradaDeDatos of a EntradaDeDatos
		/// <summary>
		/// Gets VentanaTieneEntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentanaTieneEntradaDeDatos(EntradaDeDatos element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, EntradaDeDatosDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets VentanaTieneEntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentanaTieneEntradaDeDatos(EntradaDeDatos element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, EntradaDeDatosDomainRoleId, newVentana);
		}
		#endregion
		#region EntradaDeDatos domain role code
		
		/// <summary>
		/// EntradaDeDatos domain role Id.
		/// </summary>
		public static readonly global::System.Guid EntradaDeDatosDomainRoleId = new global::System.Guid(0x38cf1731, 0xe890, 0x45a3, 0x8c, 0x22, 0xc8, 0x63, 0x63, 0x06, 0x06, 0x3d);
		
		/// <summary>
		/// DomainRole EntradaDeDatos
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.EntradaDeDatos
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos/EntradaDeDatos.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos/EntradaDeDatos.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "VentanaTieneEntradaDeDatos", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos/EntradaDeDatos.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("38cf1731-e890-45a3-8c22-c8636306063d")]
		public virtual EntradaDeDatos EntradaDeDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EntradaDeDatos)DslModeling::DomainRoleInfo.GetRolePlayer(this, EntradaDeDatosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EntradaDeDatosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EntradaDeDatos of a Ventana
		/// <summary>
		/// Gets a list of EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<EntradaDeDatos> GetEntradaDeDatos(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<EntradaDeDatos>, EntradaDeDatos>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of VentanaHasEntradaDeDatos links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos> GetLinksToEntradaDeDatos ( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos>(ventanaInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.VentanaDomainRoleId);
		}
		#endregion
		#region EntradaDeDatos link accessor
		/// <summary>
		/// Get the VentanaHasEntradaDeDatos link to a EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos GetLinkToVentanaTieneEntradaDeDatos (global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos entradaDeDatosInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos>(entradaDeDatosInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.EntradaDeDatosDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of EntradaDeDatos not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region VentanaHasEntradaDeDatos instance accessors
		
		/// <summary>
		/// Get any VentanaHasEntradaDeDatos links between a given Ventana and a EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana source, global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos link in links )
			{
				if ( target.Equals(link.EntradaDeDatos) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one VentanaHasEntradaDeDatos link between a given Ventanaand a EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana source, global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos link in links )
			{
				if ( target.Equals(link.EntradaDeDatos) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship VentanaHasComponente
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("39235b98-156b-4508-bf0d-ab4a7954ff85")]
	public partial class VentanaHasComponente : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// VentanaHasComponente domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x39235b98, 0x156b, 0x4508, 0xbf, 0x0d, 0xab, 0x4a, 0x79, 0x54, 0xff, 0x85);
	
				
		/// <summary>
		/// Constructor
		/// Creates a VentanaHasComponente link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">Componente to use as the target of the relationship.</param>
		public VentanaHasComponente(Ventana source, Componente target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(VentanaHasComponente.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(VentanaHasComponente.ComponenteDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasComponente(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasComponente(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasComponente(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasComponente(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xeb7932cc, 0x3744, 0x4e55, 0xae, 0x0f, 0xb0, 0xd6, 0x91, 0x9b, 0x42, 0x70);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente/Ventana.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente/Ventana.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Componente", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("eb7932cc-3744-4e55-ae0f-b0d6919b4270")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VentanaTieneComponente of a Componente
		/// <summary>
		/// Gets VentanaTieneComponente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentanaTieneComponente(Componente element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ComponenteDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets VentanaTieneComponente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentanaTieneComponente(Componente element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ComponenteDomainRoleId, newVentana);
		}
		#endregion
		#region Componente domain role code
		
		/// <summary>
		/// Componente domain role Id.
		/// </summary>
		public static readonly global::System.Guid ComponenteDomainRoleId = new global::System.Guid(0xf37ac901, 0x06dc, 0x472a, 0x97, 0xea, 0x9a, 0xaa, 0x52, 0xda, 0x34, 0x9c);
		
		/// <summary>
		/// DomainRole Componente
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.Componente
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente/Componente.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente/Componente.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "VentanaTieneComponente", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente/Componente.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("f37ac901-06dc-472a-97ea-9aaa52da349c")]
		public virtual Componente Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Componente)DslModeling::DomainRoleInfo.GetRolePlayer(this, ComponenteDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ComponenteDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Componente of a Ventana
		/// <summary>
		/// Gets a list of Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Componente> GetComponente(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of VentanaHasComponente links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente> GetLinksToComponente ( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente>(ventanaInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.VentanaDomainRoleId);
		}
		#endregion
		#region Componente link accessor
		/// <summary>
		/// Get the VentanaHasComponente link to a Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente GetLinkToVentanaTieneComponente (global::UPM_IPS.IGGORCJCFProyectoIPS.Componente componenteInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente>(componenteInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.ComponenteDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Componente not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region VentanaHasComponente instance accessors
		
		/// <summary>
		/// Get any VentanaHasComponente links between a given Ventana and a Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana source, global::UPM_IPS.IGGORCJCFProyectoIPS.Componente target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente link in links )
			{
				if ( target.Equals(link.Componente) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one VentanaHasComponente link between a given Ventanaand a Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana source, global::UPM_IPS.IGGORCJCFProyectoIPS.Componente target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente link in links )
			{
				if ( target.Equals(link.Componente) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ComponenteReferencesItem
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("bfb85a46-e1cb-4b74-9e5b-00b5b38eb5f9")]
	public partial class ComponenteReferencesItem : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ComponenteReferencesItem domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xbfb85a46, 0xe1cb, 0x4b74, 0x9e, 0x5b, 0x00, 0xb5, 0xb3, 0x8e, 0xb5, 0xf9);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ComponenteReferencesItem link in the same Partition as the given Componente
		/// </summary>
		/// <param name="source">Componente to use as the source of the relationship.</param>
		/// <param name="target">Item to use as the target of the relationship.</param>
		public ComponenteReferencesItem(Componente source, Item target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ComponenteReferencesItem.ComponenteDomainRoleId, source), new DslModeling::RoleAssignment(ComponenteReferencesItem.ItemDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ComponenteReferencesItem(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ComponenteReferencesItem(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ComponenteReferencesItem(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ComponenteReferencesItem(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Componente domain role code
		
		/// <summary>
		/// Componente domain role Id.
		/// </summary>
		public static readonly global::System.Guid ComponenteDomainRoleId = new global::System.Guid(0x3b9cbf6d, 0x5979, 0x48cf, 0xbf, 0x27, 0x6c, 0xda, 0xeb, 0x11, 0x07, 0xf3);
		
		/// <summary>
		/// DomainRole Componente
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.Componente
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem/Componente.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem/Componente.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Item", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem/Componente.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("3b9cbf6d-5979-48cf-bf27-6cdaeb1107f3")]
		public virtual Componente Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Componente)DslModeling::DomainRoleInfo.GetRolePlayer(this, ComponenteDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ComponenteDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Componente of a Item
		/// <summary>
		/// Gets a list of Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Componente> GetComponente(Item element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(element, ItemDomainRoleId);
		}
		#endregion
		#region Item domain role code
		
		/// <summary>
		/// Item domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemDomainRoleId = new global::System.Guid(0xbc3fef80, 0x0e57, 0x42d3, 0xbc, 0x6a, 0xd7, 0x7e, 0x00, 0x64, 0x25, 0x0a);
		
		/// <summary>
		/// DomainRole Item
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.Item
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem/Item.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem/Item.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Componente", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem/Item.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("bc3fef80-0e57-42d3-bc6a-d77e0064250a")]
		public virtual Item Item
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Item)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Item of a Componente
		/// <summary>
		/// Gets a list of Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Item> GetItem(Componente element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(element, ComponenteDomainRoleId);
		}
		#endregion
		#region Componente link accessor
		/// <summary>
		/// Get the list of ComponenteReferencesItem links to a Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem> GetLinksToItem ( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente componenteInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem>(componenteInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.ComponenteDomainRoleId);
		}
		#endregion
		#region Item link accessor
		/// <summary>
		/// Get the list of ComponenteReferencesItem links to a Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem> GetLinksToComponente ( global::UPM_IPS.IGGORCJCFProyectoIPS.Item itemInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem>(itemInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.ItemDomainRoleId);
		}
		#endregion
		#region ComponenteReferencesItem instance accessors
		
		/// <summary>
		/// Get any ComponenteReferencesItem links between a given Componente and a Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente source, global::UPM_IPS.IGGORCJCFProyectoIPS.Item target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.ComponenteDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem link in links )
			{
				if ( target.Equals(link.Item) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ComponenteReferencesItem link between a given Componenteand a Item.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente source, global::UPM_IPS.IGGORCJCFProyectoIPS.Item target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.ComponenteDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem link in links )
			{
				if ( target.Equals(link.Item) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ComponenteReferencesEntradaDeDatos
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("c6cd7881-f7db-4501-9f89-27bd3347525c")]
	public partial class ComponenteReferencesEntradaDeDatos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ComponenteReferencesEntradaDeDatos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc6cd7881, 0xf7db, 0x4501, 0x9f, 0x89, 0x27, 0xbd, 0x33, 0x47, 0x52, 0x5c);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ComponenteReferencesEntradaDeDatos link in the same Partition as the given Componente
		/// </summary>
		/// <param name="source">Componente to use as the source of the relationship.</param>
		/// <param name="target">EntradaDeDatos to use as the target of the relationship.</param>
		public ComponenteReferencesEntradaDeDatos(Componente source, EntradaDeDatos target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ComponenteReferencesEntradaDeDatos.ComponenteDomainRoleId, source), new DslModeling::RoleAssignment(ComponenteReferencesEntradaDeDatos.EntradaDeDatosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ComponenteReferencesEntradaDeDatos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ComponenteReferencesEntradaDeDatos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ComponenteReferencesEntradaDeDatos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ComponenteReferencesEntradaDeDatos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Componente domain role code
		
		/// <summary>
		/// Componente domain role Id.
		/// </summary>
		public static readonly global::System.Guid ComponenteDomainRoleId = new global::System.Guid(0xa944a24a, 0xaad5, 0x4443, 0xbf, 0x8c, 0x34, 0x23, 0x32, 0x2a, 0x7c, 0xcb);
		
		/// <summary>
		/// DomainRole Componente
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.Componente
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos/Componente.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos/Componente.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EntradaDeDatos", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos/Componente.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("a944a24a-aad5-4443-bf8c-3423322a7ccb")]
		public virtual Componente Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Componente)DslModeling::DomainRoleInfo.GetRolePlayer(this, ComponenteDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ComponenteDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Componente of a EntradaDeDatos
		/// <summary>
		/// Gets a list of Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Componente> GetComponente(EntradaDeDatos element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(element, EntradaDeDatosDomainRoleId);
		}
		#endregion
		#region EntradaDeDatos domain role code
		
		/// <summary>
		/// EntradaDeDatos domain role Id.
		/// </summary>
		public static readonly global::System.Guid EntradaDeDatosDomainRoleId = new global::System.Guid(0xcc7954f8, 0x3bf4, 0x4421, 0x8f, 0xd0, 0x81, 0x75, 0x5e, 0x80, 0xc6, 0x16);
		
		/// <summary>
		/// DomainRole EntradaDeDatos
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.EntradaDeDatos
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos/EntradaDeDatos.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos/EntradaDeDatos.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Componente", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos/EntradaDeDatos.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("cc7954f8-3bf4-4421-8fd0-81755e80c616")]
		public virtual EntradaDeDatos EntradaDeDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EntradaDeDatos)DslModeling::DomainRoleInfo.GetRolePlayer(this, EntradaDeDatosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EntradaDeDatosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EntradaDeDatos of a Componente
		/// <summary>
		/// Gets a list of EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<EntradaDeDatos> GetEntradaDeDatos(Componente element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<EntradaDeDatos>, EntradaDeDatos>(element, ComponenteDomainRoleId);
		}
		#endregion
		#region Componente link accessor
		/// <summary>
		/// Get the list of ComponenteReferencesEntradaDeDatos links to a Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos> GetLinksToEntradaDeDatos ( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente componenteInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos>(componenteInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.ComponenteDomainRoleId);
		}
		#endregion
		#region EntradaDeDatos link accessor
		/// <summary>
		/// Get the list of ComponenteReferencesEntradaDeDatos links to a EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos> GetLinksToComponente ( global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos entradaDeDatosInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos>(entradaDeDatosInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.EntradaDeDatosDomainRoleId);
		}
		#endregion
		#region ComponenteReferencesEntradaDeDatos instance accessors
		
		/// <summary>
		/// Get any ComponenteReferencesEntradaDeDatos links between a given Componente and a EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente source, global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.ComponenteDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos link in links )
			{
				if ( target.Equals(link.EntradaDeDatos) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ComponenteReferencesEntradaDeDatos link between a given Componenteand a EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente source, global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.ComponenteDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos link in links )
			{
				if ( target.Equals(link.EntradaDeDatos) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ComponenteReferencesMenu
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("5809c1f2-5e53-4dcf-9ce6-15c3e6a98c39")]
	public partial class ComponenteReferencesMenu : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ComponenteReferencesMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5809c1f2, 0x5e53, 0x4dcf, 0x9c, 0xe6, 0x15, 0xc3, 0xe6, 0xa9, 0x8c, 0x39);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ComponenteReferencesMenu link in the same Partition as the given Componente
		/// </summary>
		/// <param name="source">Componente to use as the source of the relationship.</param>
		/// <param name="target">Menu to use as the target of the relationship.</param>
		public ComponenteReferencesMenu(Componente source, Menu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ComponenteReferencesMenu.ComponenteDomainRoleId, source), new DslModeling::RoleAssignment(ComponenteReferencesMenu.MenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ComponenteReferencesMenu(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ComponenteReferencesMenu(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ComponenteReferencesMenu(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ComponenteReferencesMenu(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Componente domain role code
		
		/// <summary>
		/// Componente domain role Id.
		/// </summary>
		public static readonly global::System.Guid ComponenteDomainRoleId = new global::System.Guid(0xe1558843, 0x5ffc, 0x4621, 0xa0, 0xbb, 0xa3, 0x76, 0x37, 0xfc, 0x34, 0x22);
		
		/// <summary>
		/// DomainRole Componente
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.Componente
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu/Componente.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu/Componente.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Menu", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu/Componente.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("e1558843-5ffc-4621-a0bb-a37637fc3422")]
		public virtual Componente Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Componente)DslModeling::DomainRoleInfo.GetRolePlayer(this, ComponenteDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ComponenteDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Componente of a Menu
		/// <summary>
		/// Gets a list of Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Componente> GetComponente(Menu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(element, MenuDomainRoleId);
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0x0aaa75f8, 0x86df, 0x42ec, 0x81, 0x38, 0x88, 0xad, 0x98, 0xba, 0x20, 0xf4);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu/Menu.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu/Menu.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Componente", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu/Menu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("0aaa75f8-86df-42ec-8138-88ad98ba20f4")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Menu of a Componente
		/// <summary>
		/// Gets a list of Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Menu> GetMenu(Componente element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(element, ComponenteDomainRoleId);
		}
		#endregion
		#region Componente link accessor
		/// <summary>
		/// Get the list of ComponenteReferencesMenu links to a Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu> GetLinksToMenu ( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente componenteInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu>(componenteInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.ComponenteDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the list of ComponenteReferencesMenu links to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu> GetLinksToComponente ( global::UPM_IPS.IGGORCJCFProyectoIPS.Menu menuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu>(menuInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.MenuDomainRoleId);
		}
		#endregion
		#region ComponenteReferencesMenu instance accessors
		
		/// <summary>
		/// Get any ComponenteReferencesMenu links between a given Componente and a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente source, global::UPM_IPS.IGGORCJCFProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.ComponenteDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ComponenteReferencesMenu link between a given Componenteand a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente source, global::UPM_IPS.IGGORCJCFProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.ComponenteDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ClaseReferencesComponente
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("18dd07f5-f9a2-4184-b96a-37eb26031b4a")]
	public partial class ClaseReferencesComponente : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseReferencesComponente domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x18dd07f5, 0xf9a2, 0x4184, 0xb9, 0x6a, 0x37, 0xeb, 0x26, 0x03, 0x1b, 0x4a);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseReferencesComponente link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">Componente to use as the target of the relationship.</param>
		public ClaseReferencesComponente(Clase source, Componente target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseReferencesComponente.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseReferencesComponente.ComponenteDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesComponente(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesComponente(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesComponente(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesComponente(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0xd82f0ffd, 0x59b0, 0x4ab6, 0x86, 0xf1, 0x02, 0xf7, 0x9b, 0x74, 0xd8, 0xfa);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente/Clase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente/Clase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Componente", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("d82f0ffd-59b0-4ab6-86f1-02f79b74d8fa")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a Componente
		/// <summary>
		/// Gets a list of Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClase(Componente element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, ComponenteDomainRoleId);
		}
		#endregion
		#region Componente domain role code
		
		/// <summary>
		/// Componente domain role Id.
		/// </summary>
		public static readonly global::System.Guid ComponenteDomainRoleId = new global::System.Guid(0xf5d7a9ee, 0x9977, 0x4132, 0x9c, 0x97, 0x17, 0x80, 0xf0, 0xa4, 0x92, 0x68);
		
		/// <summary>
		/// DomainRole Componente
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.Componente
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente/Componente.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente/Componente.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente/Componente.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("f5d7a9ee-9977-4132-9c97-1780f0a49268")]
		public virtual Componente Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Componente)DslModeling::DomainRoleInfo.GetRolePlayer(this, ComponenteDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ComponenteDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Componente of a Clase
		/// <summary>
		/// Gets a list of Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Componente> GetComponente(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ClaseReferencesComponente links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente> GetLinksToComponente ( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente>(claseInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.ClaseDomainRoleId);
		}
		#endregion
		#region Componente link accessor
		/// <summary>
		/// Get the list of ClaseReferencesComponente links to a Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente> GetLinksToClase ( global::UPM_IPS.IGGORCJCFProyectoIPS.Componente componenteInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente>(componenteInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.ComponenteDomainRoleId);
		}
		#endregion
		#region ClaseReferencesComponente instance accessors
		
		/// <summary>
		/// Get any ClaseReferencesComponente links between a given Clase and a Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.Componente target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente link in links )
			{
				if ( target.Equals(link.Componente) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseReferencesComponente link between a given Claseand a Componente.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.Componente target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente link in links )
			{
				if ( target.Equals(link.Componente) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainRelationship ClaseReferencesEntradaDeDatos
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("eb730d2c-cee9-4c7f-ad0e-bdf052622439")]
	public partial class ClaseReferencesEntradaDeDatos : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseReferencesEntradaDeDatos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xeb730d2c, 0xcee9, 0x4c7f, 0xad, 0x0e, 0xbd, 0xf0, 0x52, 0x62, 0x24, 0x39);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseReferencesEntradaDeDatos link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">EntradaDeDatos to use as the target of the relationship.</param>
		public ClaseReferencesEntradaDeDatos(Clase source, EntradaDeDatos target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseReferencesEntradaDeDatos.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseReferencesEntradaDeDatos.EntradaDeDatosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesEntradaDeDatos(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesEntradaDeDatos(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseReferencesEntradaDeDatos(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseReferencesEntradaDeDatos(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x6c5db1e3, 0x93b5, 0x4e2c, 0x85, 0xae, 0xff, 0x0d, 0xd9, 0x57, 0x92, 0xc2);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos/Clase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos/Clase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EntradaDeDatos", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("6c5db1e3-93b5-4e2c-85ae-ff0dd95792c2")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a EntradaDeDatos
		/// <summary>
		/// Gets a list of Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClase(EntradaDeDatos element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, EntradaDeDatosDomainRoleId);
		}
		#endregion
		#region EntradaDeDatos domain role code
		
		/// <summary>
		/// EntradaDeDatos domain role Id.
		/// </summary>
		public static readonly global::System.Guid EntradaDeDatosDomainRoleId = new global::System.Guid(0x82e5dd5b, 0xbd18, 0x4351, 0x96, 0x83, 0xcc, 0xf6, 0x0c, 0x11, 0x2b, 0x0f);
		
		/// <summary>
		/// DomainRole EntradaDeDatos
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.EntradaDeDatos
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos/EntradaDeDatos.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos/EntradaDeDatos.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase", PropertyDisplayNameKey="UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos/EntradaDeDatos.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("82e5dd5b-bd18-4351-9683-ccf60c112b0f")]
		public virtual EntradaDeDatos EntradaDeDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EntradaDeDatos)DslModeling::DomainRoleInfo.GetRolePlayer(this, EntradaDeDatosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EntradaDeDatosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EntradaDeDatos of a Clase
		/// <summary>
		/// Gets a list of EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<EntradaDeDatos> GetEntradaDeDatos(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<EntradaDeDatos>, EntradaDeDatos>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ClaseReferencesEntradaDeDatos links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos> GetLinksToEntradaDeDatos ( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos>(claseInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.ClaseDomainRoleId);
		}
		#endregion
		#region EntradaDeDatos link accessor
		/// <summary>
		/// Get the list of ClaseReferencesEntradaDeDatos links to a EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos> GetLinksToClase ( global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos entradaDeDatosInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos>(entradaDeDatosInstance, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.EntradaDeDatosDomainRoleId);
		}
		#endregion
		#region ClaseReferencesEntradaDeDatos instance accessors
		
		/// <summary>
		/// Get any ClaseReferencesEntradaDeDatos links between a given Clase and a EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos> GetLinks( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos>();
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos link in links )
			{
				if ( target.Equals(link.EntradaDeDatos) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseReferencesEntradaDeDatos link between a given Claseand a EntradaDeDatos.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos GetLink( global::UPM_IPS.IGGORCJCFProyectoIPS.Clase source, global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos>(source, global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos link in links )
			{
				if ( target.Equals(link.EntradaDeDatos) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
