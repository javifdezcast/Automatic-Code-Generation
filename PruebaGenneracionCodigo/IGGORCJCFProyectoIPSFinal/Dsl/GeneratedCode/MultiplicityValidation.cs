//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslValidation = global::Microsoft.VisualStudio.Modeling.Validation;
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class TapizVentanas
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateTapizVentanasMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.VentanaPrincipal == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"TapizVentanas", "", "VentanaPrincipal"),
						"DSL0001", this);
			}
			if (this.EstadoFinal == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"TapizVentanas", "", "EstadoFinal"),
						"DSL0001", this);
			}
		} // ValidateTapizVentanasMultiplicity
	} // class TapizVentanas
} // UPM_IPS.IGGORCJCFProyectoIPS

namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public abstract partial class Item
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateItemMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.Ventana == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"Item", "", "Ventana"),
						"DSL0001", this);
			}
			if (this.EstadoFinal == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"Item", "", "EstadoFinal"),
						"DSL0001", this);
			}
		} // ValidateItemMultiplicity
	} // class Item
} // UPM_IPS.IGGORCJCFProyectoIPS

	
 