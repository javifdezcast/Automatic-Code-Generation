//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass TapizVentanas
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("05182d5d-2476-4a28-85ff-f6f0ee8a11d0")]
	public partial class TapizVentanas : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TapizVentanas domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x05182d5d, 0x2476, 0x4a28, 0x85, 0xff, 0xf6, 0xf0, 0xee, 0x8a, 0x11, 0xd0);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizVentanas(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizVentanas(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region solucionNodos domain property code
		
		/// <summary>
		/// solucionNodos domain property Id.
		/// </summary>
		public static readonly global::System.Guid solucionNodosDomainPropertyId = new global::System.Guid(0xef8eca93, 0xc560, 0x4b5a, 0xbf, 0x5c, 0xce, 0x14, 0xb1, 0x60, 0x22, 0xf8);
		
		/// <summary>
		/// Storage for solucionNodos
		/// </summary>
		private global::System.String solucionNodosPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of solucionNodos domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas.Solucion Nodos
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas/solucionNodos.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas/solucionNodos.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ef8eca93-c560-4b5a-bf5c-ce14b16022f8")]
		public global::System.String solucionNodos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return solucionNodosPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				solucionNodosPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TapizVentanas.solucionNodos domain property.
		/// </summary>
		internal sealed partial class solucionNodosPropertyHandler : DslModeling::DomainPropertyValueHandler<TapizVentanas, global::System.String>
		{
			private solucionNodosPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TapizVentanas.solucionNodos domain property value handler.
			/// </summary>
			public static readonly solucionNodosPropertyHandler Instance = new solucionNodosPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TapizVentanas.solucionNodos domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return solucionNodosDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TapizVentanas element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.solucionNodosPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TapizVentanas element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.solucionNodosPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region VentanaPrincipal opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaPrincipal.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanas
		/// </summary>
		public virtual VentanaPrincipal VentanaPrincipal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId) as VentanaPrincipal;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId, value);
			}
		}
		#endregion
		#region VentanaSecundaria opposite domain role accessor
		
		/// <summary>
		/// Gets a list of VentanaSecundaria.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanas
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<VentanaSecundaria> VentanaSecundaria
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<VentanaSecundaria>, VentanaSecundaria>(global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId);
			}
		}
		#endregion
		#region EstadoFinal opposite domain role accessor
		/// <summary>
		/// Gets or sets EstadoFinal.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.TapizVentanas
		/// </summary>
		public virtual EstadoFinal EstadoFinal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.TapizVentanasDomainRoleId) as EstadoFinal;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.TapizVentanasDomainRoleId, value);
			}
		}
		#endregion
		#region Clase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.TapizVentanas
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.TapizVentanasDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: TapizVentanasHasVentanaPrincipal.VentanaPrincipal
					if (this.VentanaPrincipal != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: TapizVentanasHasEstadoFinal.EstadoFinal
					if (this.EstadoFinal != null)
					{
						return false;
					}
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.IGGORCJCFProyectoIPS.Clase.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal sourceVentanaPrincipal1 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal;
			if (sourceVentanaPrincipal1 != null)
			{
				// Create link for path TapizVentanasHasVentanaPrincipal.VentanaPrincipal
				this.VentanaPrincipal = sourceVentanaPrincipal1;

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria sourceVentanaSecundaria2 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria;
			if (sourceVentanaSecundaria2 != null)
			{
				// Create link for path TapizVentanasHasVentanaSecundaria.VentanaSecundaria
				this.VentanaSecundaria.Add(sourceVentanaSecundaria2);

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal sourceEstadoFinal3 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal;
			if (sourceEstadoFinal3 != null)
			{
				// Create link for path TapizVentanasHasEstadoFinal.EstadoFinal
				this.EstadoFinal = sourceEstadoFinal3;

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.Clase sourceClase4 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.Clase;
			if (sourceClase4 != null)
			{
				// Create link for path TapizVentanasHasClase.Clase
				this.Clase.Add(sourceClase4);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal sourceVentanaPrincipal1 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal;
			if (sourceVentanaPrincipal1 != null)
			{
				// Delete link for path TapizVentanasHasVentanaPrincipal.VentanaPrincipal
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.GetLinks((global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas)this, sourceVentanaPrincipal1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.VentanaPrincipalDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria sourceVentanaSecundaria2 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria;
			if (sourceVentanaSecundaria2 != null)
			{
				// Delete link for path TapizVentanasHasVentanaSecundaria.VentanaSecundaria
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.GetLinks((global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas)this, sourceVentanaSecundaria2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.VentanaSecundariaDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal sourceEstadoFinal3 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal;
			if (sourceEstadoFinal3 != null)
			{
				// Delete link for path TapizVentanasHasEstadoFinal.EstadoFinal
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.GetLinks((global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas)this, sourceEstadoFinal3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.TapizVentanasDomainRoleId, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.EstadoFinalDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.Clase sourceClase4 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.Clase;
			if (sourceClase4 != null)
			{
				// Delete link for path TapizVentanasHasClase.Clase
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.GetLinks((global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanas)this, sourceClase4))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.TapizVentanasDomainRoleId, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.ClaseDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaPrincipal
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaPrincipal.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("85712a7c-6e4e-47e4-9369-a87f16d4beee")]
	public partial class VentanaPrincipal : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaPrincipal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x85712a7c, 0x6e4e, 0x47e4, 0x93, 0x69, 0xa8, 0x7f, 0x16, 0xd4, 0xbe, 0xee);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TapizVentanas opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizVentanas.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.VentanaPrincipal
		/// </summary>
		public virtual TapizVentanas TapizVentanas
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.VentanaPrincipalDomainRoleId) as TapizVentanas;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaPrincipal.VentanaPrincipalDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass Ventana
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Ventana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("16cabeb6-1864-457a-a797-dc3c5df6ba84")]
	public abstract partial class Ventana : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Ventana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x16cabeb6, 0x1864, 0x457a, 0xa7, 0x97, 0xdc, 0x3c, 0x5d, 0xf6, 0xba, 0x84);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Ventana(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x5b3a1ed1, 0x8f75, 0x4fd6, 0x87, 0x41, 0x96, 0x13, 0xad, 0x6a, 0x1d, 0xfb);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Ventana.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/nombre.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/nombre.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("5b3a1ed1-8f75-4fd6-8741-9613ad6a1dfb")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region altoCalculada domain property code
		
		/// <summary>
		/// altoCalculada domain property Id.
		/// </summary>
		public static readonly global::System.Guid altoCalculadaDomainPropertyId = new global::System.Guid(0xe653dba2, 0x3fb7, 0x45fa, 0xa0, 0xb1, 0xea, 0xe5, 0xc7, 0xa1, 0x6b, 0x5b);
		
		/// <summary>
		/// Gets or sets the value of altoCalculada domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Ventana.AltoCalculada
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/altoCalculada.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/altoCalculada.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("e653dba2-3fb7-45fa-a0b1-eae5c7a16b5b")]
		public global::System.String altoCalculada
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return altoCalculadaPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.altoCalculada domain property.
		/// </summary>
		internal sealed partial class altoCalculadaPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Ventana, global::System.String>
		{
			private altoCalculadaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.altoCalculada domain property value handler.
			/// </summary>
			public static readonly altoCalculadaPropertyHandler Instance = new altoCalculadaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.altoCalculada domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return altoCalculadaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for altoCalculada because its Kind is
				// set to Calculated. Please provide the GetaltoCalculadaValue()
				// method on the domain class.
				return element.GetaltoCalculadaValue();
			}
		
		}
		
		#endregion
		#region anchoCalculada domain property code
		
		/// <summary>
		/// anchoCalculada domain property Id.
		/// </summary>
		public static readonly global::System.Guid anchoCalculadaDomainPropertyId = new global::System.Guid(0x8112f79a, 0x378b, 0x4f18, 0x83, 0xec, 0xb3, 0x6c, 0x60, 0x67, 0x0e, 0x4c);
		
		/// <summary>
		/// Gets or sets the value of anchoCalculada domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Ventana.AnchoCalculada
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/anchoCalculada.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/anchoCalculada.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("8112f79a-378b-4f18-83ec-b36c60670e4c")]
		public global::System.String anchoCalculada
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return anchoCalculadaPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.anchoCalculada domain property.
		/// </summary>
		internal sealed partial class anchoCalculadaPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Ventana, global::System.String>
		{
			private anchoCalculadaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.anchoCalculada domain property value handler.
			/// </summary>
			public static readonly anchoCalculadaPropertyHandler Instance = new anchoCalculadaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.anchoCalculada domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return anchoCalculadaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for anchoCalculada because its Kind is
				// set to Calculated. Please provide the GetanchoCalculadaValue()
				// method on the domain class.
				return element.GetanchoCalculadaValue();
			}
		
		}
		
		#endregion
		#region alto domain property code
		
		/// <summary>
		/// alto domain property Id.
		/// </summary>
		public static readonly global::System.Guid altoDomainPropertyId = new global::System.Guid(0x3ccd00c2, 0x91f3, 0x490a, 0x84, 0x2a, 0x37, 0x20, 0xb3, 0xf3, 0xfd, 0xc4);
		
		/// <summary>
		/// Storage for alto
		/// </summary>
		private global::System.Int16 altoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of alto domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Ventana.Alto
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/alto.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/alto.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3ccd00c2-91f3-490a-842a-3720b3f3fdc4")]
		public global::System.Int16 alto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return altoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				altoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.alto domain property.
		/// </summary>
		internal sealed partial class altoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int16>
		{
			private altoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.alto domain property value handler.
			/// </summary>
			public static readonly altoPropertyHandler Instance = new altoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.alto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return altoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.altoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.altoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ancho domain property code
		
		/// <summary>
		/// ancho domain property Id.
		/// </summary>
		public static readonly global::System.Guid anchoDomainPropertyId = new global::System.Guid(0x575215b3, 0x3f28, 0x4b8c, 0xa1, 0x27, 0x4c, 0xe4, 0x20, 0x63, 0x2e, 0x4f);
		
		/// <summary>
		/// Storage for ancho
		/// </summary>
		private global::System.Int16 anchoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ancho domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Ventana.Ancho
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/ancho.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Ventana/ancho.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("575215b3-3f28-4b8c-a127-4ce420632e4f")]
		public global::System.Int16 ancho
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return anchoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				anchoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.ancho domain property.
		/// </summary>
		internal sealed partial class anchoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int16>
		{
			private anchoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.ancho domain property value handler.
			/// </summary>
			public static readonly anchoPropertyHandler Instance = new anchoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.ancho domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return anchoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.anchoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.anchoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BotonPertenece opposite domain role accessor
		
		/// <summary>
		/// Gets a list of BotonPertenece.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> BotonPertenece
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.VentanaDomainRoleId);
			}
		}
		#endregion
		#region MenuPertenece opposite domain role accessor
		
		/// <summary>
		/// Gets a list of MenuPertenece.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> MenuPertenece
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Item opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Item.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Item> Item
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Clase1 opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase1.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase1
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.VentanaDomainRoleId);
			}
		}
		#endregion
		#region EntradaDeDatos opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EntradaDeDatos.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntradaDeDatos> EntradaDeDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntradaDeDatos>, EntradaDeDatos>(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Componente opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Componente.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Componente> Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.VentanaDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.IGGORCJCFProyectoIPS.Boton.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.IGGORCJCFProyectoIPS.Menu.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.IGGORCJCFProyectoIPS.Componente.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.Boton sourceBoton1 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.Boton;
			if (sourceBoton1 != null)
			{
				// Create link for path VentanaHasBotonPertenece.BotonPertenece
				this.BotonPertenece.Add(sourceBoton1);

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.Menu sourceMenu2 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.Menu;
			if (sourceMenu2 != null)
			{
				// Create link for path VentanaHasMenuPertenece.MenuPertenece
				this.MenuPertenece.Add(sourceMenu2);

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos sourceEntradaDeDatos3 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos;
			if (sourceEntradaDeDatos3 != null)
			{
				// Create link for path VentanaHasEntradaDeDatos.EntradaDeDatos
				this.EntradaDeDatos.Add(sourceEntradaDeDatos3);

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.Componente sourceComponente4 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.Componente;
			if (sourceComponente4 != null)
			{
				// Create link for path VentanaHasComponente.Componente
				this.Componente.Add(sourceComponente4);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.Boton sourceBoton1 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.Boton;
			if (sourceBoton1 != null)
			{
				// Delete link for path VentanaHasBotonPertenece.BotonPertenece
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.GetLinks((global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana)this, sourceBoton1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.VentanaDomainRoleId, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.BotonDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.Menu sourceMenu2 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.Menu;
			if (sourceMenu2 != null)
			{
				// Delete link for path VentanaHasMenuPertenece.MenuPertenece
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.GetLinks((global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana)this, sourceMenu2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.VentanaDomainRoleId, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.MenuDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos sourceEntradaDeDatos3 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos;
			if (sourceEntradaDeDatos3 != null)
			{
				// Delete link for path VentanaHasEntradaDeDatos.EntradaDeDatos
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.GetLinks((global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana)this, sourceEntradaDeDatos3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.VentanaDomainRoleId, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.EntradaDeDatosDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.Componente sourceComponente4 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.Componente;
			if (sourceComponente4 != null)
			{
				// Delete link for path VentanaHasComponente.Componente
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.GetLinks((global::UPM_IPS.IGGORCJCFProyectoIPS.Ventana)this, sourceComponente4))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.VentanaDomainRoleId, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.ComponenteDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaSecundaria
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ae874e9e-aac4-4b81-8d64-5e1adf322526")]
	public partial class VentanaSecundaria : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaSecundaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xae874e9e, 0xaac4, 0x4b81, 0x8d, 0x64, 0x5e, 0x1a, 0xdf, 0x32, 0x25, 0x26);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region modal domain property code
		
		/// <summary>
		/// modal domain property Id.
		/// </summary>
		public static readonly global::System.Guid modalDomainPropertyId = new global::System.Guid(0xe4be0606, 0x7c24, 0x4c79, 0xa8, 0x00, 0x52, 0x39, 0x71, 0xdc, 0x49, 0x14);
		
		/// <summary>
		/// Storage for modal
		/// </summary>
		private global::System.Boolean modalPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of modal domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria.Modal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria/modal.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria/modal.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("e4be0606-7c24-4c79-a800-523971dc4914")]
		public global::System.Boolean modal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return modalPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				modalPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the VentanaSecundaria.modal domain property.
		/// </summary>
		internal sealed partial class modalPropertyHandler : DslModeling::DomainPropertyValueHandler<VentanaSecundaria, global::System.Boolean>
		{
			private modalPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VentanaSecundaria.modal domain property value handler.
			/// </summary>
			public static readonly modalPropertyHandler Instance = new modalPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VentanaSecundaria.modal domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return modalDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(VentanaSecundaria element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.modalPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(VentanaSecundaria element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.modalPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region modalCalculada domain property code
		
		/// <summary>
		/// modalCalculada domain property Id.
		/// </summary>
		public static readonly global::System.Guid modalCalculadaDomainPropertyId = new global::System.Guid(0x4507a9b4, 0xbcba, 0x4a6c, 0xa2, 0xca, 0x9b, 0x17, 0x96, 0x16, 0xf6, 0x87);
		
		/// <summary>
		/// Gets or sets the value of modalCalculada domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria.Modal Calculada
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria/modalCalculada.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.VentanaSecundaria/modalCalculada.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("4507a9b4-bcba-4a6c-a2ca-9b179616f687")]
		public global::System.String modalCalculada
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return modalCalculadaPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the VentanaSecundaria.modalCalculada domain property.
		/// </summary>
		internal sealed partial class modalCalculadaPropertyHandler : DslModeling::CalculatedPropertyValueHandler<VentanaSecundaria, global::System.String>
		{
			private modalCalculadaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VentanaSecundaria.modalCalculada domain property value handler.
			/// </summary>
			public static readonly modalCalculadaPropertyHandler Instance = new modalCalculadaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VentanaSecundaria.modalCalculada domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return modalCalculadaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(VentanaSecundaria element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for modalCalculada because its Kind is
				// set to Calculated. Please provide the GetmodalCalculadaValue()
				// method on the domain class.
				return element.GetmodalCalculadaValue();
			}
		
		}
		
		#endregion
		#region TapizVentanas1 opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizVentanas1.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.VentanaSecundaria
		/// </summary>
		public virtual TapizVentanas TapizVentanas1
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.VentanaSecundariaDomainRoleId) as TapizVentanas;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasVentanaSecundaria.VentanaSecundariaDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass Boton
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Boton
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Boton.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Boton.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e1ba7945-19ff-4284-991f-d00cc1ec4661")]
	public partial class Boton : Item
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Boton domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe1ba7945, 0x19ff, 0x4284, 0x99, 0x1f, 0xd0, 0x0c, 0xc1, 0xec, 0x46, 0x61);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region VentanaTieneBoton opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaTieneBoton.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.Boton
		/// </summary>
		public virtual Ventana VentanaTieneBoton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.BotonDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasBotonPertenece.BotonDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass Menu
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Menu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Menu.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Menu.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c3cc88f9-32f2-49e0-8598-9791e8f8d9de")]
	public partial class Menu : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Menu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc3cc88f9, 0x32f2, 0x49e0, 0x85, 0x98, 0x97, 0x91, 0xe8, 0xf8, 0xd9, 0xde);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0xac9077ae, 0xeb18, 0x4d44, 0x80, 0xd9, 0xe8, 0xe5, 0x1b, 0x30, 0x73, 0xfc);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Menu.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Menu/nombre.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Menu/nombre.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ac9077ae-eb18-4d44-80d9-e8e51b3073fc")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Menu.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Menu, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Menu.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Menu.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Menu element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Menu element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region VentanaTieneMenu opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaTieneMenu.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.Menu
		/// </summary>
		public virtual Ventana VentanaTieneMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.MenuDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasMenuPertenece.MenuDomainRoleId, value);
			}
		}
		#endregion
		#region ItemPerteneceMenu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemPerteneceMenu.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.Menu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemMenu> ItemPerteneceMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.MenuDomainRoleId);
			}
		}
		#endregion
		#region Clase3 opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase3.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.Menu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase3
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.MenuDomainRoleId);
			}
		}
		#endregion
		#region Componente opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Componente.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.Menu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Componente> Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.MenuDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu sourceItemMenu1 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu;
			if (sourceItemMenu1 != null)
			{
				// Create link for path MenuHasItemPerteneceMenu.ItemPerteneceMenu
				this.ItemPerteneceMenu.Add(sourceItemMenu1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu sourceItemMenu1 = sourceElement as global::UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu;
			if (sourceItemMenu1 != null)
			{
				// Delete link for path MenuHasItemPerteneceMenu.ItemPerteneceMenu
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.GetLinks((global::UPM_IPS.IGGORCJCFProyectoIPS.Menu)this, sourceItemMenu1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.MenuDomainRoleId, global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.ItemMenuDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass ItemMenu
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.ItemMenu.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("1c5e4f69-2708-4e54-95d5-652b6c9da151")]
	public partial class ItemMenu : Item
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ItemMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1c5e4f69, 0x2708, 0x4e54, 0x95, 0xd5, 0x65, 0x2b, 0x6c, 0x9d, 0xa1, 0x51);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemMenu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemMenu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region MenuTieneItem opposite domain role accessor
		/// <summary>
		/// Gets or sets MenuTieneItem.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.ItemMenu
		/// </summary>
		public virtual Menu MenuTieneItem
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.ItemMenuDomainRoleId) as Menu;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.MenuHasItemPerteneceMenu.ItemMenuDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass Item
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Item
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Item.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Item.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("9c0771e4-40f6-446e-aebc-a2f9c1b79263")]
	public abstract partial class Item : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Item domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x9c0771e4, 0x40f6, 0x446e, 0xae, 0xbc, 0xa2, 0xf9, 0xc1, 0xb7, 0x92, 0x63);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Item(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region titulo domain property code
		
		/// <summary>
		/// titulo domain property Id.
		/// </summary>
		public static readonly global::System.Guid tituloDomainPropertyId = new global::System.Guid(0x76d2ac40, 0x52fe, 0x412a, 0x94, 0x29, 0x9c, 0xbb, 0x81, 0x60, 0x25, 0xb1);
		
		/// <summary>
		/// Storage for titulo
		/// </summary>
		private global::System.String tituloPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of titulo domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Item.Titulo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Item/titulo.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Item/titulo.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("76d2ac40-52fe-412a-9429-9cbb816025b1")]
		public global::System.String titulo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tituloPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Item.titulo domain property.
		/// </summary>
		internal sealed partial class tituloPropertyHandler : DslModeling::DomainPropertyValueHandler<Item, global::System.String>
		{
			private tituloPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Item.titulo domain property value handler.
			/// </summary>
			public static readonly tituloPropertyHandler Instance = new tituloPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Item.titulo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tituloDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Item element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Item element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Ventana opposite domain role accessor
		/// <summary>
		/// Gets or sets Ventana.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.Item
		/// </summary>
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.ItemDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesVentana.ItemDomainRoleId, value);
			}
		}
		#endregion
		#region EstadoFinal opposite domain role accessor
		/// <summary>
		/// Gets or sets EstadoFinal.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.Item
		/// </summary>
		public virtual EstadoFinal EstadoFinal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.ItemDomainRoleId) as EstadoFinal;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.ItemDomainRoleId, value);
			}
		}
		#endregion
		#region Clase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.Item
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.ItemDomainRoleId);
			}
		}
		#endregion
		#region Clase2 opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase2.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.Item
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase2
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.ItemDomainRoleId);
			}
		}
		#endregion
		#region Componente opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Componente.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.Item
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Componente> Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.ItemDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass EstadoFinal
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.EstadoFinal.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c0ab758e-d242-42b2-bbff-aeb46f468cc5")]
	public partial class EstadoFinal : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EstadoFinal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc0ab758e, 0xd242, 0x42b2, 0xbb, 0xff, 0xae, 0xb4, 0x6f, 0x46, 0x8c, 0xc5);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFinal(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFinal(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TapizEstado opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizEstado.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.EstadoFinal
		/// </summary>
		public virtual TapizVentanas TapizEstado
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.EstadoFinalDomainRoleId) as TapizVentanas;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasEstadoFinal.EstadoFinalDomainRoleId, value);
			}
		}
		#endregion
		#region Item opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Item.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.EstadoFinal
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Item> Item
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesEstadoFinal.EstadoFinalDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass Clase
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Clase
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("66d87b27-0e95-4e36-8dcc-b34ae71c5f56")]
	public partial class Clase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Clase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x66d87b27, 0x0e95, 0x4e36, 0x8d, 0xcc, 0xb3, 0x4a, 0xe7, 0x1c, 0x5f, 0x56);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Color domain property code
		
		/// <summary>
		/// Color domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorDomainPropertyId = new global::System.Guid(0x0efa2f1a, 0x67b2, 0x4b3e, 0x9b, 0x15, 0x36, 0xe6, 0x19, 0x0a, 0xbd, 0x40);
		
		/// <summary>
		/// Storage for Color
		/// </summary>
		private global::System.String colorPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Color domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Clase.Color
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase/Color.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase/Color.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0efa2f1a-67b2-4b3e-9b15-36e6190abd40")]
		public global::System.String Color
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.Color domain property.
		/// </summary>
		internal sealed partial class ColorPropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private ColorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.Color domain property value handler.
			/// </summary>
			public static readonly ColorPropertyHandler Instance = new ColorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.Color domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorFondo domain property code
		
		/// <summary>
		/// ColorFondo domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorFondoDomainPropertyId = new global::System.Guid(0x79a450be, 0xf4fc, 0x43fb, 0xb2, 0xf9, 0x5f, 0xfc, 0x7b, 0x33, 0x94, 0x9f);
		
		/// <summary>
		/// Storage for ColorFondo
		/// </summary>
		private global::System.String colorFondoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ColorFondo domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Clase.Color Fondo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase/ColorFondo.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase/ColorFondo.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("79a450be-f4fc-43fb-b2f9-5ffc7b33949f")]
		public global::System.String ColorFondo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorFondoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorFondoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.ColorFondo domain property.
		/// </summary>
		internal sealed partial class ColorFondoPropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private ColorFondoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.ColorFondo domain property value handler.
			/// </summary>
			public static readonly ColorFondoPropertyHandler Instance = new ColorFondoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.ColorFondo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorFondoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorFondoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorFondoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoLetra domain property code
		
		/// <summary>
		/// TipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoLetraDomainPropertyId = new global::System.Guid(0x292a2854, 0x5737, 0x4d06, 0x9b, 0x8d, 0xd7, 0x00, 0x87, 0x43, 0x6f, 0xba);
		
		/// <summary>
		/// Storage for TipoLetra
		/// </summary>
		private TipoDelLetra tipoLetraPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoLetra domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Clase.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase/TipoLetra.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase/TipoLetra.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("292a2854-5737-4d06-9b8d-d70087436fba")]
		public TipoDelLetra TipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.TipoLetra domain property.
		/// </summary>
		internal sealed partial class TipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, TipoDelLetra>
		{
			private TipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.TipoLetra domain property value handler.
			/// </summary>
			public static readonly TipoLetraPropertyHandler Instance = new TipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.TipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoDelLetra GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, TipoDelLetra newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoDelLetra oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x770cef7e, 0xabca, 0x408c, 0xa1, 0xde, 0x1d, 0x75, 0xe6, 0x24, 0xdd, 0x18);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Clase.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase/Nombre.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Clase/Nombre.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("770cef7e-abca-408c-a1de-1d75e624dd18")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Item opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Item.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Item> Item
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(global::UPM_IPS.IGGORCJCFProyectoIPS.ItemReferencesClase.ClaseDomainRoleId);
			}
		}
		#endregion
		#region TapizVentanas2 opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizVentanas2.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.Clase
		/// </summary>
		public virtual TapizVentanas TapizVentanas2
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.ClaseDomainRoleId) as TapizVentanas;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.TapizVentanasHasClase.ClaseDomainRoleId, value);
			}
		}
		#endregion
		#region Ventana4 opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Ventana4.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> Ventana4
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesVentana4.ClaseDomainRoleId);
			}
		}
		#endregion
		#region Item4 opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Item4.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Item> Item4
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesItem4.ClaseDomainRoleId);
			}
		}
		#endregion
		#region Menu4 opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Menu4.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> Menu4
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesMenu4.ClaseDomainRoleId);
			}
		}
		#endregion
		#region Componente opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Componente.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Componente> Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.ClaseDomainRoleId);
			}
		}
		#endregion
		#region EntradaDeDatos opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EntradaDeDatos.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntradaDeDatos> EntradaDeDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntradaDeDatos>, EntradaDeDatos>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.ClaseDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass EntradaDeDatos
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("49e80a2f-bf4f-4688-8240-e798c0b98659")]
	public abstract partial class EntradaDeDatos : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EntradaDeDatos domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x49e80a2f, 0xbf4f, 0x4688, 0x82, 0x40, 0xe7, 0x98, 0xc0, 0xb9, 0x86, 0x59);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected EntradaDeDatos(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Titulo domain property code
		
		/// <summary>
		/// Titulo domain property Id.
		/// </summary>
		public static readonly global::System.Guid TituloDomainPropertyId = new global::System.Guid(0xc7e3f744, 0xe587, 0x4777, 0xab, 0xaf, 0x12, 0xb4, 0xc7, 0x4b, 0x90, 0x9d);
		
		/// <summary>
		/// Storage for Titulo
		/// </summary>
		private global::System.String tituloPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Titulo domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos.Titulo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos/Titulo.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos/Titulo.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c7e3f744-e587-4777-abaf-12b4c74b909d")]
		public global::System.String Titulo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TituloPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EntradaDeDatos.Titulo domain property.
		/// </summary>
		internal sealed partial class TituloPropertyHandler : DslModeling::DomainPropertyValueHandler<EntradaDeDatos, global::System.String>
		{
			private TituloPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EntradaDeDatos.Titulo domain property value handler.
			/// </summary>
			public static readonly TituloPropertyHandler Instance = new TituloPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EntradaDeDatos.Titulo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TituloDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EntradaDeDatos element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EntradaDeDatos element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Texto domain property code
		
		/// <summary>
		/// Texto domain property Id.
		/// </summary>
		public static readonly global::System.Guid TextoDomainPropertyId = new global::System.Guid(0x0accaf0f, 0x5e88, 0x49fd, 0xb9, 0xb5, 0x09, 0x8f, 0x5b, 0xc8, 0xb5, 0x20);
		
		/// <summary>
		/// Storage for Texto
		/// </summary>
		private global::System.String textoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Texto domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos.Texto
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos/Texto.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.EntradaDeDatos/Texto.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0accaf0f-5e88-49fd-b9b5-098f5bc8b520")]
		public global::System.String Texto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return textoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TextoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EntradaDeDatos.Texto domain property.
		/// </summary>
		internal sealed partial class TextoPropertyHandler : DslModeling::DomainPropertyValueHandler<EntradaDeDatos, global::System.String>
		{
			private TextoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EntradaDeDatos.Texto domain property value handler.
			/// </summary>
			public static readonly TextoPropertyHandler Instance = new TextoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EntradaDeDatos.Texto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TextoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EntradaDeDatos element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.textoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EntradaDeDatos element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.textoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region VentanaTieneEntradaDeDatos opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaTieneEntradaDeDatos.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.EntradaDeDatos
		/// </summary>
		public virtual Ventana VentanaTieneEntradaDeDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.EntradaDeDatosDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasEntradaDeDatos.EntradaDeDatosDomainRoleId, value);
			}
		}
		#endregion
		#region Componente opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Componente.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.EntradaDeDatos
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Componente> Componente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Componente>, Componente>(global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.EntradaDeDatosDomainRoleId);
			}
		}
		#endregion
		#region Clase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.EntradaDeDatos
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesEntradaDeDatos.EntradaDeDatosDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass CampoDeTexto
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.CampoDeTexto
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.CampoDeTexto.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.CampoDeTexto.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("74f4abb7-1af2-497e-bc4d-a017b59c6641")]
	public partial class CampoDeTexto : EntradaDeDatos
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// CampoDeTexto domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x74f4abb7, 0x1af2, 0x497e, 0xbc, 0x4d, 0xa0, 0x17, 0xb5, 0x9c, 0x66, 0x41);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CampoDeTexto(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CampoDeTexto(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass AreaDeTexto
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.AreaDeTexto
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.AreaDeTexto.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.AreaDeTexto.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("aee51b8d-12ce-4ea1-9328-df7f7e1bf087")]
	public partial class AreaDeTexto : EntradaDeDatos
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AreaDeTexto domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xaee51b8d, 0x12ce, 0x4ea1, 0x93, 0x28, 0xdf, 0x7f, 0x7e, 0x1b, 0xf0, 0x87);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AreaDeTexto(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AreaDeTexto(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Disposicion domain property code
		
		/// <summary>
		/// Disposicion domain property Id.
		/// </summary>
		public static readonly global::System.Guid DisposicionDomainPropertyId = new global::System.Guid(0xcf9ddfb8, 0x7ae5, 0x43dc, 0x9e, 0x0d, 0x07, 0xe5, 0x66, 0x48, 0xc8, 0xa0);
		
		/// <summary>
		/// Storage for Disposicion
		/// </summary>
		private Disposicion disposicionPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Disposicion domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.AreaDeTexto.Disposicion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.AreaDeTexto/Disposicion.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.AreaDeTexto/Disposicion.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("cf9ddfb8-7ae5-43dc-9e0d-07e56648c8a0")]
		public Disposicion Disposicion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return disposicionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DisposicionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AreaDeTexto.Disposicion domain property.
		/// </summary>
		internal sealed partial class DisposicionPropertyHandler : DslModeling::DomainPropertyValueHandler<AreaDeTexto, Disposicion>
		{
			private DisposicionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AreaDeTexto.Disposicion domain property value handler.
			/// </summary>
			public static readonly DisposicionPropertyHandler Instance = new DisposicionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AreaDeTexto.Disposicion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DisposicionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed Disposicion GetValue(AreaDeTexto element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.disposicionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AreaDeTexto element, Disposicion newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				Disposicion oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.disposicionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass CheckBox
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.CheckBox
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.CheckBox.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.CheckBox.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("8adf2015-30dc-43a0-8ea7-3706c40ae261")]
	public partial class CheckBox : EntradaDeDatos
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// CheckBox domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8adf2015, 0x30dc, 0x43a0, 0x8e, 0xa7, 0x37, 0x06, 0xc4, 0x0a, 0xe2, 0x61);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CheckBox(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CheckBox(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace UPM_IPS.IGGORCJCFProyectoIPS
{
	/// <summary>
	/// DomainClass Componente
	/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Componente
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Componente.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Componente.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e9bb489e-1bc1-4f12-be57-451b8137567b")]
	public partial class Componente : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Componente domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe9bb489e, 0x1bc1, 0x4f12, 0xbe, 0x57, 0x45, 0x1b, 0x81, 0x37, 0x56, 0x7b);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Componente(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Componente(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x3bf83950, 0x6fa4, 0x4eb9, 0xa8, 0x5b, 0x27, 0x17, 0x50, 0xc4, 0x6e, 0x98);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.Componente.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.IGGORCJCFProyectoIPS.Componente/Nombre.DisplayName", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.IGGORCJCFProyectoIPS.Componente/Nombre.Description", typeof(global::UPM_IPS.IGGORCJCFProyectoIPS.IGGORCJCFProyectoIPSDomainModel), "UPM_IPS.IGGORCJCFProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3bf83950-6fa4-4eb9-a85b-271750c46e98")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Componente.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Componente, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Componente.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Componente.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Componente element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Componente element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region VentanaTieneComponente opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaTieneComponente.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.Componente
		/// </summary>
		public virtual Ventana VentanaTieneComponente
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.ComponenteDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.IGGORCJCFProyectoIPS.VentanaHasComponente.ComponenteDomainRoleId, value);
			}
		}
		#endregion
		#region Item opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Item.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.Componente
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Item> Item
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Item>, Item>(global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesItem.ComponenteDomainRoleId);
			}
		}
		#endregion
		#region EntradaDeDatos opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EntradaDeDatos.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.Componente
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntradaDeDatos> EntradaDeDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntradaDeDatos>, EntradaDeDatos>(global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesEntradaDeDatos.ComponenteDomainRoleId);
			}
		}
		#endregion
		#region Menu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Menu.
		/// Description for UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.Componente
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.IGGORCJCFProyectoIPS.ComponenteReferencesMenu.ComponenteDomainRoleId);
			}
		}
		#endregion
		#region Clase opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clase.
		/// Description for
		/// UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.Componente
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.IGGORCJCFProyectoIPS.ClaseReferencesComponente.ComponenteDomainRoleId);
			}
		}
		#endregion
	}
}
